/*
		A basic implementation of the JFrame class.
*/
package application.webbrowser;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.util.Vector;

import nodesystem.StateContainer;
import controlledparts.ControlledButton;
import controlledparts.FrameWithControlledButton;
import controlledparts.SelectedButton;

public class LanguageCodeFrame extends javax.swing.JFrame implements FrameWithControlledButton, StateContainer    
{
    public int getState()
    {
        return this.currentState;
    }

    public int currentState;

    public void setState(int i)
    {
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
    	if(frame!=null){
          frame.languageCodeButton.setText(((ControlledButton)(buttons.elementAt(i))).getText());       
        }
        this.currentState=i;
    }

    public boolean isControlledByLocalUser()
    {
        // This method is derived from interface FrameWithControlledButton
        // to do: code goes here
        if(frame==null) return true;
        return frame.isControlledByLocalUser();
    }

    public boolean isDirectOperation()
    {
        // This method is derived from interface FrameWithControlledButton
        // to do: code goes here
        if(frame==null) return true;
        return frame.isDirectOperation();
    }

    public void sendEvent(String x)
    {
        frame.sendEvent("code."+x);
    }

    public void hide()
    {
        super.hide();
    }

    public WebFrame frame;

    public void setFrame(WebFrame f)
    {
        frame=f;
    }

    public Vector buttons;

    public void clickButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
        b.click();
        this.mouseClickedAtButton(i);
    }

    public void focusButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
            SelectedButton button=(SelectedButton)(buttons.elementAt(i));
//            button.controlledButton_mouseEntered(null);
             button.focus();
    }

    public void mouseClickedAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
        this.setState(i);
	    this.hide();
    }

    public void mouseEnteredAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
 //       frame.sendEvent("code.btn.enter("+i+")\n");
    }

    public void mouseExitedAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
//        frame.sendEvent("code.btn.exit("+i+")\n");
    }

    public void unfocusButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
            SelectedButton button=(SelectedButton)(buttons.elementAt(i));
//            button.controlledButton_mouseExited(null);
         button.unFocus();
    }

	public LanguageCodeFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(null);
		setSize(176,178);
		setVisible(false);
		controlledButton1.setText("SHIFT-JIS");
		controlledButton1.setActionCommand("SHIFT-JIS");
		getContentPane().add(controlledButton1);
		controlledButton1.setBackground(new java.awt.Color(204,204,204));
		controlledButton1.setForeground(java.awt.Color.black);
		controlledButton1.setFont(new Font("Dialog", Font.BOLD, 12));
		controlledButton1.setBounds(12,96,144,24);
		controlledButton2.setText("EUC-JP");
		controlledButton2.setActionCommand("EUC-JP");
		getContentPane().add(controlledButton2);
		controlledButton2.setBackground(new java.awt.Color(204,204,204));
		controlledButton2.setForeground(java.awt.Color.black);
		controlledButton2.setFont(new Font("Dialog", Font.BOLD, 12));
		controlledButton2.setBounds(12,48,144,24);
		controlledButton3.setText("JIS");
		controlledButton3.setActionCommand("JIS");
		getContentPane().add(controlledButton3);
		controlledButton3.setBackground(new java.awt.Color(204,204,204));
		controlledButton3.setForeground(java.awt.Color.black);
		controlledButton3.setFont(new Font("Dialog", Font.BOLD, 12));
		controlledButton3.setBounds(12,72,144,24);
		JLabel1.setText("language code");
		getContentPane().add(JLabel1);
		JLabel1.setBounds(12,12,108,36);
		controlledButton4.setText("JISAutoDetect");
		controlledButton4.setActionCommand("JISAutoDetect");
		getContentPane().add(controlledButton4);
		controlledButton4.setBackground(new java.awt.Color(204,204,204));
		controlledButton4.setForeground(java.awt.Color.black);
		controlledButton4.setFont(new Font("Dialog", Font.BOLD, 12));
		controlledButton4.setBounds(12,120,144,24);
		//}}

		//{{INIT_MENUS
		//}}
		
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		controlledButton1.addActionListener(lSymAction);
		controlledButton2.addActionListener(lSymAction);
		controlledButton3.addActionListener(lSymAction);
		controlledButton4.addActionListener(lSymAction);
		//}}

		buttons=new Vector();
		buttons.addElement(this.controlledButton2);
		buttons.addElement(this.controlledButton3);
		buttons.addElement(this.controlledButton1);
		buttons.addElement(this.controlledButton4);
		int numberOfButtons=buttons.size();
		for(int i=0;i<numberOfButtons;i++){
		    ControlledButton b=(ControlledButton)(buttons.elementAt(i));
		    b.setFrame(this);
		    b.setID(i);
    		b.addActionListener(lSymAction);
		}
	
	}

	public LanguageCodeFrame(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new LanguageCodeFrame()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	controlledparts.ControlledButton controlledButton1 = new controlledparts.ControlledButton();
	controlledparts.ControlledButton controlledButton2 = new controlledparts.ControlledButton();
	controlledparts.ControlledButton controlledButton3 = new controlledparts.ControlledButton();
	javax.swing.JLabel JLabel1 = new javax.swing.JLabel();
	controlledparts.ControlledButton controlledButton4 = new controlledparts.ControlledButton();
	//}}

	//{{DECLARE_MENUS
	//}}


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == controlledButton1)
				controlledButton1_actionPerformed(event);
			else if (object == controlledButton2)
				controlledButton2_actionPerformed(event);
			else if (object == controlledButton3)
				controlledButton3_actionPerformed(event);
			else if (object == controlledButton4)
				controlledButton4_actionPerformed(event);
		}
	}

	void controlledButton1_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		controlledButton1_actionPerformed_Interaction1(event);
	}

	void controlledButton1_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
//			controlledButton1.show();
		} catch (java.lang.Exception e) {
		}
	}

	void controlledButton2_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		controlledButton2_actionPerformed_Interaction1(event);
	}

	void controlledButton2_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
//			controlledButton2.show();
		} catch (java.lang.Exception e) {
		}
	}

	void controlledButton3_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		controlledButton3_actionPerformed_Interaction1(event);
	}

	void controlledButton3_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
//			controlledButton3.show();
		} catch (java.lang.Exception e) {
		}
	}

	void controlledButton4_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		controlledButton4_actionPerformed_Interaction1(event);
	}

	void controlledButton4_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
//			controlledButton4.show();
		} catch (java.lang.Exception e) {
		}
	}
}