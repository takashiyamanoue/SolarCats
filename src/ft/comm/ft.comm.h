/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ft_comm_SerialInputStream */

#ifndef _Included_ft_comm_SerialInputStream
#define _Included_ft_comm_SerialInputStream
#ifdef __cplusplus
extern "C" {
#endif
#undef ft_comm_SerialInputStream_SKIP_BUFFER_SIZE
#define ft_comm_SerialInputStream_SKIP_BUFFER_SIZE 2048L
/* Inaccessible static: skipBuffer */
/*
 * Class:     ft_comm_SerialInputStream
 * Method:    nativeConstructor
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_SerialInputStream_nativeConstructor
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ft_comm_SerialInputStream
 * Method:    close
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ft_comm_SerialInputStream_close
  (JNIEnv *, jobject, jint);

/*
 * Class:     ft_comm_SerialInputStream
 * Method:    read
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_SerialInputStream_read__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     ft_comm_SerialInputStream
 * Method:    read
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_SerialInputStream_read__I_3BII
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class ft_comm_SerialOutputStream */

#ifndef _Included_ft_comm_SerialOutputStream
#define _Included_ft_comm_SerialOutputStream
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ft_comm_SerialOutputStream
 * Method:    nativeConstructor
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_SerialOutputStream_nativeConstructor
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ft_comm_SerialOutputStream
 * Method:    close
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ft_comm_SerialOutputStream_close
  (JNIEnv *, jobject, jint);

/*
 * Class:     ft_comm_SerialOutputStream
 * Method:    write
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_SerialOutputStream_write
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class ft_comm_ParallelInputStream */

#ifndef _Included_ft_comm_ParallelInputStream
#define _Included_ft_comm_ParallelInputStream
#ifdef __cplusplus
extern "C" {
#endif
#undef ft_comm_ParallelInputStream_SKIP_BUFFER_SIZE
#define ft_comm_ParallelInputStream_SKIP_BUFFER_SIZE 2048L
/* Inaccessible static: skipBuffer */
/*
 * Class:     ft_comm_ParallelInputStream
 * Method:    nativeConstructor
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_ParallelInputStream_nativeConstructor
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ft_comm_ParallelInputStream
 * Method:    read
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_ParallelInputStream_read__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     ft_comm_ParallelInputStream
 * Method:    read
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_ParallelInputStream_read__I_3BII
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class ft_comm_ParallelOutputStream */

#ifndef _Included_ft_comm_ParallelOutputStream
#define _Included_ft_comm_ParallelOutputStream
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ft_comm_ParallelOutputStream
 * Method:    nativeConstructor
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_ParallelOutputStream_nativeConstructor
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ft_comm_ParallelOutputStream
 * Method:    write
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_ft_comm_ParallelOutputStream_write
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
