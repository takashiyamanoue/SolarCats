/*
		A basic implementation of the JFrame class.
*/
package application.remotenodecontroller;

import java.awt.*;
import javax.swing.*;
import java.util.*;

import controlledparts.*;

public class JoinedNodeFrame extends javax.swing.JFrame implements FrameWithControlledButton  
{
    public void removeAll()
    {
        int max=buttons.size();
        for(int i=1;i<max;i++){
            buttons.remove(1);
        }
        this.JoinedNodePane.removeAll();
    }

    public boolean isControlledByLocalUser()
    {
        // This method is derived from interface FrameWithControlledButton
        // to do: code goes here
        return true;
    }

    public boolean isDirectOperation()
    {
        // This method is derived from interface FrameWithControlledButton
        // to do: code goes here
        return true;
    }

    public void sendEvent(String x)
    {
    }

    public void removeItem(int i)
    {
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
        this.JoinedNodePane.remove(b);
        buttons.remove(b);
    }

    public SymAction ISymAction;

    public void addItem(String x)
    {
        this.JoinedNodePane.setLayout(null);
        ControlledButton b=new ControlledButton();
//        b.setSize(220,22);
        b.setText(x);
        buttons.addElement(b);
        int i=buttons.size()-1;
        b.setID(i);
        this.JoinedNodePane.add(b);
        b.setFrame(this);
        b.setBounds(0,(i-1)*22,220,22);
        b.addActionListener(this.ISymAction);
        
    }

    public void setFrame(RemoteNodeController f)
    {
        frame=f;
    }

    public RemoteNodeController frame;

    public Vector buttons;

    public void clickButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
        b.click();
        this.mouseClickedAtButton(i);
    }

    public void focusButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
            SelectedButton button=(SelectedButton)(buttons.elementAt(i));
            button.focus();
    }

    public void mouseClickedAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
        if(i==0) {  // cancel button is clicked
           this.setVisible(false);
           return;
        }
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
        frame.showNodesButton.setText(b.getText());
        this.setVisible(false);
    }

    public void mouseEnteredAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
    }

    public void mouseExitedAtButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
 //           SelectedButton button=(SelectedButton)(buttons.elementAt(i));
 //           button.controlledButton_mouseExited(null);
    }

    public void unfocusButton(int i)
    {
        // This method is derived from interface SelectButtonsFrame
        // to do: code goes here
        ControlledButton b=(ControlledButton)(buttons.elementAt(i));
        b.unFocus();
    }

	public JoinedNodeFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(null);
		setSize(351,449);
		setVisible(false);
		getContentPane().add(JoinedNodePane);
		JoinedNodePane.setBounds(12,48,324,384);
		JLabel1.setText("Joined Nodes");
		getContentPane().add(JLabel1);
		JLabel1.setBounds(12,12,180,24);
		cancelButton.setText("cancel");
		cancelButton.setActionCommand("cancel");
		getContentPane().add(cancelButton);
		cancelButton.setBackground(new java.awt.Color(204,204,204));
		cancelButton.setForeground(java.awt.Color.black);
		cancelButton.setFont(new Font("Dialog", Font.BOLD, 12));
		cancelButton.setBounds(120,12,180,24);
		//}}

		//{{INIT_MENUS
		//}}
		
		buttons=new Vector();
	
		//{{REGISTER_LISTENERS
//		SymAction lSymAction = new SymAction();
//		cancelButton.addActionListener(lSymAction);
		//}}
		this.ISymAction= new SymAction();
		cancelButton.addActionListener(ISymAction);
		cancelButton.setID(0);
		cancelButton.setFrame(this);
		buttons.addElement(cancelButton);
		
//        this.JoinedNodePane.setLayout(new FlowLayout());		
	}

	public JoinedNodeFrame(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new JoinedNodeFrame()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JScrollPane JoinedNodePane = new javax.swing.JScrollPane();
	javax.swing.JLabel JLabel1 = new javax.swing.JLabel();
	ControlledButton cancelButton = new ControlledButton();
	//}}

	//{{DECLARE_MENUS
	//}}


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == cancelButton)
				cancelButton_actionPerformed(event);
		}
	}

	void cancelButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		cancelButton_actionPerformed_Interaction1(event);
	}

	void cancelButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
//			cancelButton.show();
		} catch (java.lang.Exception e) {
		}
	}
}